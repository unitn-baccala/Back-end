{
  "openapi": "3.0.3",
  "info": {
    "title": "Swagger Baccalà - OpenAPI",
    "description": "API documentation of the baccalà service\n\nSome useful links:\n- [The Baccalà repository](https://github.com/unitn-baccala)",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://localhost/api/"
    }
  ],
  "tags": [
    {
      "name": "user",
      "description": "Operations about the user"
    }
  ],
  "paths": {
    "/user": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "operationId": "createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "user saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                },
                "example": {
                  "msg": "user saved successfully",
                  "id": "some_alphanumeric_id_24"
                }
              }
            }
          },
          "400": {
            "description": "failed to create user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                }
              }
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "security": [
          {
            "httpBearerAuth": []
          }
        ],
        "summary": "Delete user",
        "operationId": "deleteUser",
        "responses": {
          "200": {
            "description": "user deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                },
                "example": {
                  "msg": "user deleted successfully",
                  "id": "some_alphanumeric_id_24"
                }
              }
            }
          },
          "400": {
            "description": "user deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                },
                "example": {
                  "msg": "informational message"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "mario.rossi@gmail.com"
          },
          "business_name": {
            "type": "string",
            "example": "Trattoria Volpe"
          },
          "password": {
            "type": "string",
            "example": "password12caratteri"
          },
          "enable_2fa": {
            "type": "boolean",
            "default": false
          }
        },
        "required": [
          "email",
          "business_name",
          "password"
        ]
      },
      "apiResponse": {
        "type": "object",
        "properties": {
          "msg": {
            "type": "string",
            "example": "informational message"
          },
          "id": {
            "type": "string",
            "example": "some_alphanumeric_id_24"
          }
        },
        "required": [
          "msg"
        ]
      }
    },
    "responses": {
      "unauthorizedError": {
        "description": "Authentication information is missing or invalid",
        "headers": {
          "WWW_Authenticate": {
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "internalServerError": {
        "description": "internal server error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/apiResponse"
            },
            "example": {
              "msg": "internal server error"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "httpBearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}