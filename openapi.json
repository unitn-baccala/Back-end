{
  "openapi": "3.0.3",
  "info": {
    "title": "Swagger Baccalà - OpenAPI 3.0",
    "description": "Documentazione delle API del servizio di gestione digitale del menù: Baccalà",
    "contact": {
      "url": "https://github.com/unitn-baccala"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://localhost/api/"
    }
  ],
  "tags": [
    {
      "name": "user",
      "description": "Operazioni riguardo l'utente"
    }
  ],
  "paths": {
    "/user": {
      "post": {
        "summary": "Crea utente",
        "description": "Crea un nuovo utente all'interno del database",
        "operationId": "createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "user saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "failed to create user: ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "examples": {
                  "request body is null": {
                    "value": {
                      "msg": "req.body == null",
                      "id": "some_alphanumeric_id_24"
                    }
                  },
                  "request password is null": {
                    "value": {
                      "msg": "req.body.password == null",
                      "id": "some_alphanumeric_id_24"
                    }
                  },
                  "request email is null": {
                    "value": {
                      "msg": "req.body.email == null",
                      "id": "some_alphanumeric_id_24"
                    }
                  },
                  "request business name is null": {
                    "value": {
                      "msg": "req.body.business_name == null",
                      "id": "some_alphanumeric_id_24"
                    }
                  },
                  "insecure passoword": {
                    "value": {
                      "msg": "insecure password",
                      "id": "some_alphanumeric_id_24"
                    }
                  },
                  "invalid email address": {
                    "value": {
                      "msg": "invalid email address",
                      "id": "some_alphanumeric_id_24"
                    }
                  },
                  "email address is taken": {
                    "value": {
                      "msg": "email address is taken",
                      "id": "some_alphanumeric_id_24"
                    }
                  },
                  "business name is taken": {
                    "value": {
                      "msg": "business name is taken",
                      "id": "some_alphanumeric_id_24"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Elimina utente",
        "description": "Elimina un utente dal database",
        "operationId": "deleteUser",
        "responses": {
          "200": {
            "description": "user deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": {
                  "msg": "user deleted successfully",
                  "id": "some_alphanumeric_id_24"
                }
              }
            }
          },
          "400": {
            "description": "failed to delete user: "
          },
          "500": {
            "description": "internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "mario.rossi@gmail.com"
          },
          "business_name": {
            "type": "string",
            "example": "Trattoria Volpe"
          },
          "password_hash": {
            "type": "string",
            "example": "password12caratteri"
          },
          "enable_2fa": {
            "type": "boolean",
            "default": false
          }
        },
        "required": [
          "email",
          "business_name",
          "password_hash"
        ]
      },
      "Response": {
        "type": "object",
        "properties": {
          "msg": {
            "type": "string",
            "example": "informational message"
          },
          "id": {
            "type": "string",
            "example": "some_alphanumeric_id_24"
          }
        }
      },
      "InternalServerErrorResponse": {
        "type": "object",
        "properties": {
          "msg": {
            "type": "string",
            "example": "internal server error"
          },
          "id": {
            "type": "string",
            "example": "some_alphanumeric_id_24"
          }
        }
      }
    }
  }
}