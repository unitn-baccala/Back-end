{
  "openapi": "3.0.3",
  "info": {
    "title": "Swagger Baccalà - OpenAPI",
    "description": "API documentation of the baccalà service\n\nSome useful links:\n- [The Baccalà repository](https://github.com/unitn-baccala)",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/"
    }
  ],
  "tags": [
    {
      "name": "user",
      "description": "Operations about users"
    },
    {
      "name": "ingredient",
      "description": "Operations about ingredients"
    },
    {
      "name": "category",
      "description": "Operations about categories"
    },
    {
      "name": "dish",
      "description": "Operations about dishes"
    },
    {
      "name": "menu",
      "description": "Operations about menus"
    }
  ],
  "paths": {
    "/api/user": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create a new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "user saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiPostResponse"
                },
                "example": {
                  "msg": "user saved successfully",
                  "id": "some_alphanumeric_id_24"
                }
              }
            }
          },
          "400": {
            "description": "failed to create user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "security": [
          {
            "httpBearerAuth": []
          }
        ],
        "summary": "Delete a user",
        "responses": {
          "200": {
            "description": "user deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                },
                "example": {
                  "msg": "user deleted successfully"
                }
              }
            }
          },
          "400": {
            "description": "failed to delete user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthenticatedError"
          },
          "403": {
            "$ref": "#/components/responses/forbiddenError"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        }
      },
      "get": {
        "tags": [
          "user"
        ],
        "security": [
          {
            "httpBearerAuth": []
          }
        ],
        "summary": "Retrieve the user's information",
        "responses": {
          "200": {
            "description": "information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "title": "UserInfo",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "some_alphanumeric_id_24"
                    },
                    "email": {
                      "type": "string",
                      "example": "mario.rossi@gmail.com"
                    },
                    "business_name": {
                      "type": "string",
                      "example": "Trattoria Volpe"
                    },
                    "enabled_2fa": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "failed to retrieve information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthenticatedError"
          },
          "403": {
            "$ref": "#/components/responses/forbiddenError"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        }
      }
    },
    "/api/user/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Obtain a JSON Web Token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "mario.rossi@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "12characterpassword"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "successful login",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "a valid jwt"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "failed to login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        }
      }
    },
    "/api/ingredient": {
      "post": {
        "tags": [
          "ingredient"
        ],
        "security": [
          {
            "httpBearerAuth": []
          }
        ],
        "summary": "Create a new ingredient",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ingredient"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "ingredient saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiPostResponse"
                },
                "example": {
                  "msg": "ingredient saved successfully",
                  "id": "some_alphanumeric_id_24"
                }
              }
            }
          },
          "400": {
            "description": "failed to create ingredient",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthenticatedError"
          },
          "403": {
            "$ref": "#/components/responses/forbiddenError"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "ingredient"
        ],
        "security": [
          {
            "httpBearerAuth": []
          }
        ],
        "summary": "Delete an ingredient",
        "responses": {
          "200": {
            "description": "ingredient deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                },
                "example": {
                  "msg": "ingredient deleted successfully"
                }
              }
            }
          },
          "400": {
            "description": "failed to delete ingredient",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthenticatedError"
          },
          "403": {
            "$ref": "#/components/responses/forbiddenError"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        }
      },
      "get": {
        "tags": [
          "ingredient"
        ],
        "security": [
          {
            "httpBearerAuth": []
          }
        ],
        "summary": "Retrieve the user's ingredients",
        "responses": {
          "200": {
            "description": "ingredients retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "title": "IngredientsArray",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "some_alphanumeric_id_24"
                      },
                      "owner_id": {
                        "type": "string",
                        "example": "some_alphanumeric_id_24"
                      },
                      "name": {
                        "type": "string",
                        "example": "cipolle"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "failed to retrieve ingredients",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthenticatedError"
          },
          "403": {
            "$ref": "#/components/responses/forbiddenError"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        }
      }
    },
    "/api/category": {
      "post": {
        "tags": [
          "category"
        ],
        "security": [
          {
            "httpBearerAuth": []
          }
        ],
        "summary": "Create a new category",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "category saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiPostResponse"
                },
                "example": {
                  "msg": "category saved successfully",
                  "id": "some_alphanumeric_id_24"
                }
              }
            }
          },
          "400": {
            "description": "failed to create category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthenticatedError"
          },
          "403": {
            "$ref": "#/components/responses/forbiddenError"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "category"
        ],
        "security": [
          {
            "httpBearerAuth": []
          }
        ],
        "summary": "Delete a category",
        "responses": {
          "200": {
            "description": "category deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                },
                "example": {
                  "msg": "category deleted successfully"
                }
              }
            }
          },
          "400": {
            "description": "failed to delete category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthenticatedError"
          },
          "403": {
            "$ref": "#/components/responses/forbiddenError"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        }
      },
      "get": {
        "tags": [
          "category"
        ],
        "security": [
          {
            "httpBearerAuth": []
          }
        ],
        "summary": "Retrieve the user's categories",
        "responses": {
          "200": {
            "description": "categories retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "title": "CategoriesArray",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "some_alphanumeric_id_24"
                      },
                      "owner_id": {
                        "type": "string",
                        "example": "some_alphanumeric_id_24"
                      },
                      "name": {
                        "type": "string",
                        "example": "piccante"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "failed to retrieve categories",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthenticatedError"
          },
          "403": {
            "$ref": "#/components/responses/forbiddenError"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        }
      }
    },
    "/api/dish": {
      "post": {
        "tags": [
          "dish"
        ],
        "security": [
          {
            "httpBearerAuth": []
          }
        ],
        "summary": "Create a new dish",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dish"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "dish saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiPostResponse"
                },
                "example": {
                  "msg": "dish saved successfully",
                  "id": "some_alphanumeric_id_24"
                }
              }
            }
          },
          "400": {
            "description": "failed to create dish",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthenticatedError"
          },
          "403": {
            "$ref": "#/components/responses/forbiddenError"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "dish"
        ],
        "security": [
          {
            "httpBearerAuth": []
          }
        ],
        "summary": "Delete a dish",
        "responses": {
          "200": {
            "description": "dish deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                },
                "example": {
                  "msg": "dish deleted successfully"
                }
              }
            }
          },
          "400": {
            "description": "failed to delete dish",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthenticatedError"
          },
          "403": {
            "$ref": "#/components/responses/forbiddenError"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        }
      },
      "get": {
        "tags": [
          "dish"
        ],
        "security": [
          {
            "httpBearerAuth": []
          }
        ],
        "summary": "Retrieve the user's dishes",
        "responses": {
          "200": {
            "description": "dishes retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DishesArray",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "some_alphanumeric_id_24"
                      },
                      "owner_id": {
                        "type": "string",
                        "example": "some_alphanumeric_id_24"
                      },
                      "name": {
                        "type": "string",
                        "example": "Spaghetti alla carbonara"
                      },
                      "description": {
                        "type": "string",
                        "example": "Buonissima carbonara del nostro chef"
                      },
                      "image": {
                        "type": "string",
                        "format": "byte",
                        "example": "binary_data"
                      },
                      "ingredients": {
                        "title": "IngredientsArray",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "some_alphanumeric_id_24"
                            }
                          }
                        }
                      },
                      "categories": {
                        "title": "CategoriesArray",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "some_alphanumeric_id_24"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "failed to retrieve dishes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthenticatedError"
          },
          "403": {
            "$ref": "#/components/responses/forbiddenError"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        }
      }
    },
    "/api/menu": {
      "post": {
        "tags": [
          "menu"
        ],
        "security": [
          {
            "httpBearerAuth": []
          }
        ],
        "summary": "Create a new menu",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Menu"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "menu saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiPostResponse"
                },
                "example": {
                  "msg": "menu saved successfully",
                  "id": "some_alphanumeric_id_24"
                }
              }
            }
          },
          "400": {
            "description": "failed to create menu",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthenticatedError"
          },
          "403": {
            "$ref": "#/components/responses/forbiddenError"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "menu"
        ],
        "security": [
          {
            "httpBearerAuth": []
          }
        ],
        "summary": "Delete a menu",
        "responses": {
          "200": {
            "description": "menu deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                },
                "example": {
                  "msg": "menu deleted successfully"
                }
              }
            }
          },
          "400": {
            "description": "failed to delete menu",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthenticatedError"
          },
          "403": {
            "$ref": "#/components/responses/forbiddenError"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        }
      },
      "get": {
        "tags": [
          "menu"
        ],
        "security": [
          {
            "httpBearerAuth": []
          }
        ],
        "summary": "Retrieve the user's menus",
        "responses": {
          "200": {
            "description": "menus retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Menu",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "some_alphanumeric_id_24"
                      },
                      "owner_id": {
                        "type": "string",
                        "example": "some_alphanumeric_id_24"
                      },
                      "name": {
                        "type": "string",
                        "example": "Menu Cena"
                      },
                      "dishes": {
                        "title": "DishesArray",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "some_alphanumeric_id_24"
                            }
                          }
                        }
                      },
                      "start_time": {
                        "type": "number",
                        "example": "minutes_since_midnight"
                      },
                      "end_time": {
                        "type": "number",
                        "example": "minutes_since_midnight"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "failed to retrieve menus",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthenticatedError"
          },
          "403": {
            "$ref": "#/components/responses/forbiddenError"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        }
      }
    },
    "/api/menu/full": {
      "get": {
        "tags": [
          "menu"
        ],
        "summary": "Retrieve a user's categories and menus where ids are substituted with actual values",
        "parameters": [
          {
            "name": "business_name",
            "in": "query",
            "description": "The name of the business which owns the menus that will be returned",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "menus retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Menu",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "some_alphanumeric_id_24"
                    },
                    "business_name": {
                      "type": "string",
                      "example": "Trattoria Volpe"
                    },
                    "categories": {
                      "title": "CategoriesArray",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "some_alphanumeric_id_24"
                          },
                          "name": {
                            "type": "string",
                            "example": "cipolle"
                          }
                        }
                      }
                    },
                    "menu": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "some_alphanumeric_id_24"
                        },
                        "name": {
                          "type": "string",
                          "example": "Cena"
                        },
                        "dishes": {
                          "title": "DishesArray",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "some_alphanumeric_id_24"
                              },
                              "name": {
                                "type": "string",
                                "example": "Spaghetti alla carbonara"
                              },
                              "description": {
                                "type": "string",
                                "example": "Buonissima carbonara del nostro chef"
                              },
                              "image": {
                                "type": "string",
                                "format": "byte",
                                "example": "binary_data"
                              },
                              "ingredients": {
                                "title": "IngredientsArray",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "example": "some_alphanumeric_id_24"
                                    },
                                    "name": {
                                      "type": "string",
                                      "example": "cipolle"
                                    }
                                  }
                                }
                              },
                              "categories": {
                                "title": "CategoriesArray",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "example": "some_alphanumeric_id_24"
                                    },
                                    "name": {
                                      "type": "string",
                                      "example": "piccante"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "start_time": {
                          "type": "number",
                          "example": "minutes_since_midnight"
                        },
                        "end_time": {
                          "type": "number",
                          "example": "minutes_since_midnight"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "failed to retrieve menus",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "mario.rossi@gmail.com"
          },
          "business_name": {
            "type": "string",
            "example": "Trattoria Volpe"
          },
          "password": {
            "type": "string",
            "example": "12characterpassword"
          },
          "enable_2fa": {
            "type": "boolean",
            "default": false
          }
        },
        "required": [
          "email",
          "business_name",
          "password"
        ]
      },
      "Ingredient": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "cipolle"
          }
        },
        "required": [
          "name"
        ]
      },
      "Category": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "piccante"
          }
        },
        "required": [
          "name"
        ]
      },
      "Dish": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Spaghetti alla carbonara"
          },
          "description": {
            "type": "string",
            "example": "Buonissima carbonara del nostro chef"
          },
          "image": {
            "type": "string",
            "format": "byte",
            "example": "base64_image_source"
          },
          "ingredients": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "some_alphanumeric_id_24"
                }
              }
            }
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "some_alphanumeric_id_24"
                }
              }
            }
          }
        },
        "required": [
          "name",
          "categories"
        ]
      },
      "Menu": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Menu Cena"
          },
          "dishes": {
            "title": "DishesArray",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "some_alphanumeric_id_24"
                }
              }
            }
          },
          "start_time": {
            "type": "number",
            "example": "minutes_since_midnight"
          },
          "end_time": {
            "type": "number",
            "example": "minutes_since_midnight"
          }
        },
        "required": [
          "name",
          "dishes",
          "start_time",
          "end_time"
        ]
      },
      "apiResponse": {
        "type": "object",
        "properties": {
          "msg": {
            "type": "string",
            "example": "informational message"
          }
        },
        "required": [
          "msg"
        ]
      },
      "apiPostResponse": {
        "type": "object",
        "properties": {
          "msg": {
            "type": "string",
            "example": "informational message"
          },
          "id": {
            "type": "string",
            "example": "some_alphanumeric_id_24"
          }
        },
        "required": [
          "msg",
          "id"
        ]
      }
    },
    "responses": {
      "unauthenticatedError": {
        "description": "token not provided",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/apiResponse"
            },
            "example": {
              "msg": "token not provided"
            }
          }
        }
      },
      "forbiddenError": {
        "description": "token not valid",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/apiResponse"
            },
            "example": {
              "msg": "token not valid"
            }
          }
        }
      },
      "internalServerError": {
        "description": "internal server error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/apiResponse"
            },
            "example": {
              "msg": "internal server error"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "httpBearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}